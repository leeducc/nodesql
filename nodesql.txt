sql


CREATE DATABASE ManaEmployee;

USE ManaEmployee;

CREATE TABLE category (
    categoryid INT PRIMARY KEY AUTO_INCREMENT,
    categoryName VARCHAR(50),
    description VARCHAR(100)
);

CREATE TABLE products (
    productid INT PRIMARY KEY AUTO_INCREMENT,
    productName VARCHAR(50),
    price FLOAT,
    category_categoryid INT,
    FOREIGN KEY (category_categoryid) REFERENCES category(categoryid)
);

-- Sample data
INSERT INTO category (categoryName, description)
VALUES ('Electronics', 'Gadgets and devices'),
       ('Clothing', 'Apparel items');

INSERT INTO products (productName, price, category_categoryid)
VALUES ('Smartphone', 699.99, 1),
       ('T-shirt', 19.99, 2);


models/db.js


const mysql = require('mysql2');

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '', // change if needed
  database: 'ManaEmployee'
});

connection.connect(err => {
  if (err) throw err;
  console.log('Connected to MySQL!');
});

module.exports = connection;


models/categoryModel.js


const db = require('./db');

exports.getAll = callback => {
  db.query('SELECT * FROM category', callback);
};

exports.insert = (data, callback) => {
  db.query('INSERT INTO category SET ?', data, callback);
};

exports.update = (id, data, callback) => {
  db.query('UPDATE category SET ? WHERE categoryid = ?', [data, id], callback);
};

exports.delete = (id, callback) => {
  db.query('DELETE FROM category WHERE categoryid = ?', [id], callback);
};



models/productModel.js

const db = require('./db');

exports.getAll = callback => {
  db.query(`SELECT p.*, c.categoryName 
            FROM products p 
            JOIN category c ON p.category_categoryid = c.categoryid`, callback);
};

exports.insert = (data, callback) => {
  db.query('INSERT INTO products SET ?', data, callback);
};

exports.update = (id, data, callback) => {
  db.query('UPDATE products SET ? WHERE productid = ?', [data, id], callback);
};

exports.delete = (id, callback) => {
  db.query('DELETE FROM products WHERE productid = ?', [id], callback);
};

exports.search = (str, callback) => {
  const searchQuery = `
    SELECT p.*, c.categoryName 
    FROM products p
    JOIN category c ON p.category_categoryid = c.categoryid
    WHERE p.productName LIKE ? OR p.price LIKE ? OR c.categoryName LIKE ?`;
  const likeStr = `%${str}%`;
  db.query(searchQuery, [likeStr, likeStr, likeStr], callback);
};



controllers/categoryController.js


const Category = require('../models/categoryModel');

exports.getAll = (req, res) => {
  Category.getAll((err, rows) => {
    if (err) res.status(500).send(err);
    else res.json(rows);
  });
};

exports.create = (req, res) => {
  Category.insert(req.body, (err, result) => {
    if (err) res.status(500).send(err);
    else res.send('Category created');
  });
};

exports.update = (req, res) => {
  const id = req.params.id;
  Category.update(id, req.body, (err) => {
    if (err) res.status(500).send(err);
    else res.send('Category updated');
  });
};

exports.delete = (req, res) => {
  const id = req.params.id;
  Category.delete(id, (err) => {
    if (err) res.status(500).send(err);
    else res.send('Category deleted');
  });
};



controllers/productController.js


const Product = require('../models/productModel');

exports.getAll = (req, res) => {
  Product.getAll((err, rows) => {
    if (err) res.status(500).send(err);
    else res.json(rows);
  });
};

exports.create = (req, res) => {
  Product.insert(req.body, (err) => {
    if (err) res.status(500).send(err);
    else res.send('Product created');
  });
};

exports.update = (req, res) => {
  const id = req.params.id;
  Product.update(id, req.body, (err) => {
    if (err) res.status(500).send(err);
    else res.send('Product updated');
  });
};

exports.delete = (req, res) => {
  const id = req.params.id;
  Product.delete(id, (err) => {
    if (err) res.status(500).send(err);
    else res.send('Product deleted');
  });
};

exports.search = (req, res) => {
  const str = req.params.strsearch;
  Product.search(str, (err, rows) => {
    if (err) res.status(500).send(err);
    else res.json(rows);
  });
};


routes/categoryRoutes.js


const express = require('express');
const router = express.Router();
const controller = require('../controllers/categoryController');

router.get('/', controller.getAll);
router.post('/', controller.create);
router.put('/:id', controller.update);
router.delete('/:id', controller.delete);

module.exports = router;


routes/productRoutes.js



const express = require('express');
const router = express.Router();
const controller = require('../controllers/productController');

router.get('/', controller.getAll);
router.post('/', controller.create);
router.put('/:id', controller.update);
router.delete('/:id', controller.delete);
router.get('/search/:strsearch', controller.search);

module.exports = router;


app.js


const express = require('express');
const bodyParser = require('body-parser');
const app = express();

const categoryRoutes = require('./routes/categoryRoutes');
const productRoutes = require('./routes/productRoutes');

app.use(bodyParser.json());

app.use('/api/categories', categoryRoutes);
app.use('/api/products', productRoutes);

app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});
